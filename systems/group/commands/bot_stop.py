from cogs import error, user, collection, word

from cogs import timeDecoder

from systems.private import buttons

import datetime, config


async def checker_protection(user_id):
	output = True

	try:
		user_object = await user.get_object_user(user_id)
	
		if await timeDecoder.get_time_is_str(user_object["bs"]) > datetime.datetime.now():
			output = False
		else:
			del user_object["bs"]
	except KeyError:
		pass

	return output


async def checker_reply_stop(message):
	if "reply_to_message" in message and message.reply_to_message.from_user.id in collection.bot_stop_db and message.from_user.id in collection.bot_stop_db[message.reply_to_message.from_user.id]["stop"] and await checker_protection(message.from_user.id) is True:
		try:
			await message.delete()
		except Exception as exception:
			return exception


async def main(message, message_text, numeration_command, command_text):
	params = {
		"arguments": {
			1: ["int|user"],
		},
		"block_errors": ["user_not_in_base"],
		"commands": numeration_command,
		"bot_me": False,
		"me": False
	}

	if not "–º–æ–∏" in command_text and "reply_to_message" in message:
		params["user"] = True
	
	usage = await error.check_errors(message, message_text, params)

	if usage[0] == 1:
		user_object = None
		if len(usage[1]["users"]) != 0 and int(usage[1]["users"][0]["id"]) != 0:
			user_object = usage[1]["users"][0]
		elif "reply_to_message" in message:
			user_object = await user.get_object_user(message.reply_to_message.from_user.id)
			if int(user_object["id"]) == 0:
				user_object = message.reply_to_message.from_user

		if not "-" in command_text and user_object is not None and (not message.from_user.id in collection.bot_stop_db or not user_object["id"] in collection.bot_stop_db[message.from_user.id]["stop"]):  # —Ö–æ—á–µ—Ç –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
			if not message.from_user.id in collection.bot_stop_db:
				collection.bot_stop_db[message.from_user.id] = {
					"id": message.from_user.id,
					"stop": []
				}

			output = "üõë <a href=\"{}\">{}</a> –∑–∞–ø—Ä–µ—Ç–∏–ª <a href=\"{}\">{}</a> –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è".format(
				await user.get_link_user(message.from_user.username, message.from_user.id), await user.get_name_user(message.from_user.first_name, message.from_user.username, message.from_user.id),
				await user.get_link_user(user_object["username"], user_object["id"]), await user.get_name_user(user_object["first_name"], user_object["username"], user_object["id"])
			)

			if "bs" in user_object:
				output += "\nüí¨ –ù–æ, —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞—â–∏—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ—Ç –∑–∞–ø—Ä–µ—Ç –º–∞–ª–æ —á–µ–º –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ..."

			collection.bot_stop_db[message.from_user.id]["stop"].append(user_object["id"])
			if len(collection.bot_stop_db[message.from_user.id]["stop"]) > 50:  # –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è (–≤—Å–µ–≥–æ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–≥—É—Ç 50 —á–µ–ª–æ–≤–µ–∫)
				del collection.bot_stop_db[message.from_user.id]["stop"][0]

		elif not "-" in command_text and user_object is not None and user_object["id"] in collection.bot_stop_db[message.from_user.id]["stop"]:  # —É–∂–µ –∑–∞–ø—Ä–µ—â–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
			output = "üö´ –¢—ã —É–∂–µ –∑–∞–ø—Ä–µ—â–∞–ª —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\nüí¨ –ö–æ–º–∞–Ω–¥–∞: \"<code>-–±–æ—Ç —Å—Ç–æ–ø</code>\" ‚Äî —Å–Ω—è—Ç—å –∑–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–≤–µ—Ç—ã"
		
		elif "–º–æ–∏" in command_text and len(usage[1]["args"]) == 0:  # —Ö–æ—á–µ—Ç –ª–∏–±–æ —Å–Ω—è—Ç—å, –ª–∏–±–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–µ—Ç—ã
			if "-" in command_text and message.from_user.id in collection.bot_stop_db:  # —Ö–æ—á–µ—Ç —Å–Ω—è—Ç—å –≤—Å–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–µ—Ç—ã
				len_user_bot_stop = len(collection.bot_stop_db[message.from_user.id]["stop"])

				output = "üü¢ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: {} {}".format(
					len_user_bot_stop, await word.ending(
						"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", len_user_bot_stop
					)
				)

				del collection.bot_stop_db[message.from_user.id]
			elif message.from_user.id in collection.bot_stop_db:  # —Ö–æ—á–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–µ—Ç—ã
				output = "‚úÖ <a href=\"{}?start={}\">–ù–∞–∂–º–∏</a>, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö –∫–æ–º—É —Ç—ã –∑–∞–ø—Ä–µ—Ç–∏–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è".format(
					config.BOT_LINK, buttons.BUTTONS["my_bot_stops"]
				)
			else:
				output = "‚ùóÔ∏è –¢—ã –µ—â—ë –Ω–∏–∫–æ–º—É –Ω–µ –∑–∞–ø—Ä–µ—â–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"
		
		elif "-" in command_text and user_object is not None and message.from_user.id in collection.bot_stop_db and user_object["id"] in collection.bot_stop_db[message.from_user.id]["stop"]:  # —Ö–æ—á–µ—Ç —Å–Ω—è—Ç—å –∑–∞–ø—Ä–µ—Ç
			output = "üü¢ <a href=\"{}\">{}</a> —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è".format(
				await user.get_link_user(user_object["username"], user_object["id"]),
				await user.get_name_user(user_object["first_name"], user_object["username"], user_object["id"])
			)
			
			collection.bot_stop_db[message.from_user.id]["stop"].remove(user_object["id"])
			if len(collection.bot_stop_db[message.from_user.id]["stop"]) == 0:
				del collection.bot_stop_db[message.from_user.id]

		elif "-" in command_text and len(usage[1]["args"]) != 0:  # —Ö–æ—á–µ—Ç —Å–Ω—è—Ç—å –∑–∞–ø—Ä–µ—Ç –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º
			if message.from_user.id in collection.bot_stop_db and len(collection.bot_stop_db[message.from_user.id]["stop"]) != 0:
				if 0 < int(usage[1]["args"][0]) <= len(collection.bot_stop_db[message.from_user.id]["stop"]):
					del collection.bot_stop_db[message.from_user.id]["stop"][int(usage[1]["args"][0])-1]

					if len(collection.bot_stop_db[message.from_user.id]["stop"]) == 0:
						del collection.bot_stop_db[message.from_user.id]

					output = "üü¢ –ó–∞–ø—Ä–µ—Ç –Ω–∞ ¬´–±–æ—Ç —Å—Ç–æ–ø¬ª –ø–æ–¥ –Ω–æ–º–µ—Ä ({}) —É–¥–∞–ª—ë–Ω".format(
						usage[1]["args"][0]
					)
				else:
					output = "‚ùóÔ∏è–£ —Ç–µ–±—è –Ω–µ—Ç –∑–∞–ø—Ä–µ—Ç–∞ –ø–æ–¥ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–∞–ø—Ä–µ—Ç—ã –ø–æ <a href=\"{}?start={}\">—ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</a>".format(
						config.BOT_LINK, buttons.BUTTONS["my_bot_stops"]
					)
			else:
				output = "‚ùóÔ∏è–¢—ã –µ—â—ë –Ω–∏–∫–æ–º—É –Ω–µ –∑–∞–ø—Ä–µ—â–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"

		elif ("reply_to_message" in message) or (len(usage[1]["args"]) != 0 and not str(usage[1]["args"][0]).isdigit()):  # –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∑–∞–ø—Ä–µ—Ç–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
			output = "‚ùóÔ∏è–¢—ã –Ω–µ –∑–∞–ø—Ä–µ—â–∞–ª —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"
		
		else:
			return

		await message.reply(output, parse_mode="HTML", disable_web_page_preview=True)
	else:
		await error.send_errors(message, usage)
