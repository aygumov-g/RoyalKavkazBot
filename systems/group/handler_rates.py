from cogs import user, collection

import datetime

max_len_rates = 50

rates_coefficient = {
	1: 36,
	2: 18,
	3: 12,
	4: 9,
	5: 7.2,
	6: 6,
	7: 5.1,
	8: 4.5,
	9: 4,
	10: 3.6,
	11: 3.2,
	12: 3,
	13: 2.7,
	14: 2.5,
	15: 2.4,
	16: 2.2,
	17: 2.1,
	18: 2
}

rates_types_int = {
	1: [23, 5, 16, 1, 14, 9, 18, 7, 12, 3, 32, 19, 21, 25, 34, 27, 36, 30],
	2: [10, 24, 33, 20, 31, 22, 29, 28, 35, 26, 15, 4, 2, 17, 6, 13, 11, 8],
	3: [0, 37]
}

rates_types_chit_not_chit = {
	1: ["—á—ë—Ç–Ω–æ–µ", "—á—ë—Ç–Ω—ã–π", "—á—ë—Ç", "—á–µ—Ç–Ω–æ–µ", "—á–µ—Ç–Ω—ã–π", "—á–µ—Ç"],
	2: ["–Ω–µ—á—ë—Ç–Ω–æ–µ", "–Ω–µ—á—ë—Ç–Ω—ã–π", "–Ω–µ—á—ë—Ç", "–Ω–µ—á–µ—Ç–Ω–æ–µ", "–Ω–µ—á–µ—Ç–Ω—ã–π", "–Ω–µ—á–µ—Ç"]
}

rates_types = {
	1: ["–∫—Ä–∞—Å–Ω–æ–µ", "–∫—Ä–∞—Å–Ω–æ", "–∫—Ä–∞—Å–Ω", "–∫—Ä–∞—Å", "–∫—Ä–∞", "–∫—Ä", "–∫"],
	2: ["—á—ë—Ä–Ω–æ–µ", "—á–µ—Ä–Ω–æ–µ", "—á—ë—Ä–Ω–æ", "—á–µ—Ä–Ω–æ", "—á—ë—Ä–Ω", "—á–µ—Ä–Ω", "—á—ë—Ä", "—á–µ—Ä", "—á—ë", "—á–µ", "—á"],
	3: ["–∑–µ–ª—ë–Ω–æ–µ", "–∑–µ–ª–µ–Ω–æ–µ", "–∑–µ–ª—ë–Ω–æ", "–∑–µ–ª–µ–Ω–æ", "–∑–µ–ª—ë–Ω", "–∑–µ–ª–µ–Ω", "–∑–µ–ª—ë", "–∑–µ–ª–µ", "–∑–µ–ª", "–∑–µ", "–∑"]
}


async def start_roulette(message):
	if not message.chat.id in collection.roulette_db:
		collection.roulette_db[message.chat.id] = {
			"id": message.chat.id,
			"reg": str(datetime.datetime.now()),
			"rates": []
		}


async def check_rates(message):
	message_text_list, output = message.text.split(" "), False
	
	if len(message_text_list) in [2, 3]:
		if len(message_text_list) == 3 and message_text_list[1] != "–Ω–∞":  # –∑–∞—â–∏—Ç–∞ –æ—Ç "2 –≤—ã—Ñ–≤—ã—Ñ 3" –∏ –ø—Ä–æ—á–µ–≥–æ
			return output

		elif str(message_text_list[0]).isdigit() or str(message_text_list[0]) in ["–≤–∞-–±–∞–Ω–∫", "–≤–∞–±–∞–Ω–∫"]:
			rate = message_text_list[0]
			if str(message_text_list[0]) in ["–≤–∞-–±–∞–Ω–∫", "–≤–∞–±–∞–Ω–∫"]:  # –µ—Å–ª–∏ –±—ã–ª –ø—Ä–æ–ø–∏—Å–∞–Ω –≤–∞-–±–∞–Ω–∫ - —Å—Ç–∞–≤–∏–º –≤—Å–µ –º–æ–Ω–µ—Ç—ã
				rate = (await user.get_object_user(message.from_user.id))["b"]

			message_text_rates_list = message_text_list[-1].replace(" ", "").split("-")
			if 2 < len(message_text_rates_list) <= 8:
				return output  # –∑–¥–µ—Å—å —Å–¥–µ–ª–∞—é —Å—Ç–∞–≤–∫–∏ –Ω–∞ –ø–æ–¥–æ–±–∏–∏ 1-3-6-8-2-10-34-4

			elif len(message_text_rates_list) == 2:
				for checkerInt in message_text_rates_list:  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —á–∏—Å–ª–∞–º –≤ 1-14 (–Ω–µ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É)
					if not str(checkerInt).isdigit():  # –µ—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ —á–∏—Å–ª–æ - –æ—Ç—Ä—É–±–∞–µ–º –≤—Å—é —Å—Ç–∞–≤–∫—É
						return output
				
				if int(message_text_rates_list[0]) <= 0 or int(message_text_rates_list[0]) >= 36 or int(message_text_rates_list[1]) > 36 or not int(message_text_rates_list[1]) - int(message_text_rates_list[0]) + 1 in rates_coefficient:
					error_send = "üö´ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω"
					
					if int(message_text_rates_list[1]) > 36:
						error_send = "üö´ –ë–æ–ª—å—à–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"
					
					await message.reply(error_send);return output
				
				elif int(message_text_rates_list[0]) <= int(message_text_rates_list[1]):  # –µ—Å–ª–∏ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –ø–µ—Ä–≤–æ–≥–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ "1-4" —Ç–æ –∏–¥—ë–º –¥–∞–ª—å—à–µ
					ratesInt = []
					for i in range(int(message_text_rates_list[1]) - int(message_text_rates_list[0]) + 1):
						ratesInt.append(str(int(message_text_rates_list[0]) + i))
					
					output = [int(rate), "-".join(ratesInt)]
			
			elif len(message_text_rates_list) == 1 and message_text_rates_list[0] in rates_types_chit_not_chit[1] + rates_types_chit_not_chit[2]:  # –µ—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ –Ω–∞ "—á—ë—Ç–Ω–æ–µ" –∏–ª–∏ "–Ω–µ—á—ë—Ç–Ω–æ–µ"
				types = rates_types_chit_not_chit[1][0]
				
				if message_text_rates_list[0] in rates_types_chit_not_chit[2]:
					types = rates_types_chit_not_chit[2][0]
				
				output = [int(rate), types]
			
			elif len(message_text_rates_list) == 1 and message_text_rates_list[0] in rates_types[1] + rates_types[2] + rates_types[3]:  # –µ—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ –Ω–∞ "–∫—Ä–∞—Å–Ω—ã–π" –∏–ª–∏ "—á—ë—Ä–Ω—ã–π" –∏–ª–∏ "–∑–µ–ª—ë–Ω—ã–π"
				output = [int(rate), message_text_list[-1].lower()]
			
			elif len(message_text_rates_list) == 1 and str(message_text_rates_list[0]).isdigit() and int(message_text_rates_list[0]) in rates_types_int[1] + rates_types_int[2] + rates_types_int[3]:  # –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞ —á–∏—Å–ª–æ
				output = [int(rate), message_text_list[-1].lower()]
	
	return output


async def main(message):
	output = False
	
	rate = await check_rates(message)
	if rate is not False:
		await start_roulette(message)
		
		user_object = await user.get_object_user(message.from_user.id)

		if len(collection.roulette_db[message.chat.id]["rates"]) >= max_len_rates:
			await message.reply("üö´ –í–≤–µ–¥–∏ \"<code>!–∫—Ä—É—Ç–∏—Ç—å</code>\", –≤ —Ä—É–ª–µ—Ç–∫–µ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å—Ç–∞–≤–æ–∫", parse_mode="HTML")
		elif int(user_object["b"]) == 0:
			await message.reply("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –º–æ–Ω–µ—Ç")
		elif int(rate[0]) <= 0:
			await message.reply("üö´ –¢–∞–∫–∏–µ —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è")
		elif int(user_object["b"]) >= rate[0]:
			await message.reply("‚úÖ –°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞")
			
			collection.roulette_db[message.chat.id]["rates"].append([
				str(message.from_user.id), str(rate[0]), str(rate[1])
			])
			
			user_object["b"] = str(int(user_object["b"]) - int(rate[0]))
		else:
			await message.reply("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç")
		
		output = True
	
	return output
